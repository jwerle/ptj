#!/usr/bin/env php
<?

define ('PTJ_VERSION', '0.0.1');

// execute main program
exit(main(sizeof($argv), $argv));


function main ($argc, $argv) {
  // set error handler for evaluation
  set_error_handler(error_handler, E_ALL|E_STRICT);

  if ($argc > 1) {
    if (0 == strcmp($argv[1], "--help")) {
      usage();
      return 1;
    } else if (0 == strcmp($argv[1], "--version")) {
      echo PTJ_VERSION;
      return 0;
    } else {
      fprintf(STDERR, "error: Unknown option: '%s'\n", $argv[1]);
      usage();
      return 1;
    }
  }

  // not piped
  if (posix_isatty(STDIN)) {
    usage();
    return 1;
  }

  $fd = fopen('php://stdin', 'r');

  // failed to open stdin
  if (!$fd) {
    return 1;
  }

  if (false == ($stream = fgets($fd))) {
    fprintf(STDERR, "error: Error parsing stdin\n");
    return 1;
  }

  try {
    echo eval("return json_encode(${stream}); ");
    fclose($fd);
  } catch (Exception $err) {
    fclose($fd);
    return 1;
  }

  return 0;
}


function usage () {
  printf("usage: ptj [--help] [--version]\n");
}


function error_handler ($errno, $errstr) {
  fprintf(STDERR, "error: (%d) '%s'\n", $errno, $errstr);
  exit(1);
}
